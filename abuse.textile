---
layout: page
title: Warning regarding Abuse
---

h1. What constitutes abuse?

* "Griefing" a.k.a. being destructive.
* Using E2M on servers where it is not explicitly declared as welcome.
* Using characters "boosted" with E2M on "legitimate"-only servers.
* Introducing items spawned with E2M into the real Terraria economy.

h1. What happens if I abuse E2M?

Dr. Zenexer gets angry.  And when Dr. Zenexer gets angry, Mr. Bigglesworth gets upset.  And when Mr. Bigglesworth gets upset, people DIE!!  (If you don't get the reference, get off my internet.)

h2. I don't give a flippin' flapjack.

You don't?  Well, let's put it this way.  Redigit, the primary developer of Terraria, has had an awfully bad experience with mods.  Though he tends to keep his mouth shut, it is safe to assume that he is not a fan of E2M.

This was not always the case.  Him keeping his mouth shut, that is.  Back when E2M was under a different name and was a commercial application, a squadron of heavily armed lawyers was sent after me.  (I received a formal Cease and Desist, and had a conversation or two with one of Redigit's lawyers, which ultimately ended with the conclusion that I was not doing anything wrong, but they would be willing to cause trouble anyway.)

Want to abuse E2M?  Go ahead.  See what happens.  Let us count how many lawyers I get to debate with this time.  And do you really think I will continue developing E2M after that?  It depends on who I blame.  If it ends up being you, keep dreaming.  (If I decide that Redigit is just stirring up trouble, which is highly unlikely, E2M is not going anywhere.)

And what if Redigit just asks me to stop?  As long as he is reasonable in his request, adios, amigos.  So do not give him a reason to make such a request.

tl;dr: If people start abusing E2M, **** will go down.

h2. Whatever.  Someone else will just take over, since it's open source.

Go ahead.  I dare you.

.NET bytecode manipulation is an undocumented art.  Not only does it require one to be an expert on the inner workings of the CLR and reverse engineering of .NET applications, but it takes many hours of tinkering, trial, and error to learn to use Mono.Cecil in such a fashion.  Examples?  Tutorials?  Documentation?  Basic function descriptions?  Non-existent.  You are on your own.

I only did it because I had no idea just how much work it would entail.  I stayed up for 48 hours straight, drinking coffee and pulling my hair out, trying to figure out how to inject a single opcode.  Fortunately, if someone does decide to help out/take over, (s)he will be able to learn that from example.

If you manage to do it, I admire your persistence and intelligence.  They likely surpass my own.  It was sheer luck that I had the prerequisite knowledge.  Someone picking this up intentionally, knowing ahead of time the effort and skill required... there is certainly a quality in that person that I lack.